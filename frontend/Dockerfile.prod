# Build stage: compile React app
FROM node:18-alpine AS build
WORKDIR /app

# Install deps
# Copy package files and install dependencies. Use `npm install` here so the
# build works even if a package-lock.json is not present in the repo. If you
# add a package-lock.json in the future, you can switch back to `npm ci` for
# deterministic installs.
COPY package*.json ./
RUN npm install --no-audit --no-fund

# Build args for embedding API URL
ARG REACT_APP_API_URL
ENV REACT_APP_API_URL=${REACT_APP_API_URL}

# Copy source and build
COPY . .
RUN npm run build

# Runtime stage: serve static via Nginx
FROM nginx:alpine

# Copy SPA-friendly nginx config
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Copy built assets
COPY --from=build /app/build /usr/share/nginx/html

# Set proper permissions
RUN chown -R nginx:nginx /usr/share/nginx/html && \
    chmod -R 755 /usr/share/nginx/html

# Health check for Render
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:80/health || exit 1

EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
